snippet class
	public class ${1:`Filename("", "untitled")`} {
		${2}
		
		public $1(${3}) {
			${4}
		}
	}
snippet attr
	private ${1};
snippet main
	public static void main(String[] args) {
		${1:/* code */}
	}

# access
snippet pu
	public
snippet pro
	protected
snippet pr
	private

snippet st
	static
snippet fi
	final
snippet ab
	abstract
snippet sy
	synchronized

# conditional
snippet if
	if (${1}) ${2}
snippet el
	else 
snippet elif
	else if (${1}) ${2}

# loops
snippet wh
	while (${1}) ${2}
snippet for
	for (${1}; ${2}; ${3}) ${4}
snippet fore
	for (${1} : ${2}) ${3}
snippet br
	break;

snippet re
	return

snippet ca
	catch(${1:Exception} ${2:e}) ${3}
snippet th
	throw 

# import
#snippet im
#	import
#snippet j.u
#	java.util
#snippet j.i
#	java.io.
#snippet j.b
#	java.beans.
#snippet j.n
#	java.net.
#snippet j.m
#	java.math.

# switch
snippet switch
	switch (${1}) ${2}
snippet case
	case ${1}:
		${2}
	${3}
snippet default
	default:
		${1}

#snippet tc
#	public class ${1:`Filename()`} extends ${2:TestCase}
#snippet t
#	public void test${1:Name}() throws Exception ${2}
#snippet in
#	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
#snippet m
#	${1:void} ${2:method}(${3}) ${4:throws }${5}
#snippet v
#	${1:String} ${2:var}${3: = null}${4};${5}
#snippet co
#	static public final ${1:String} ${2:var} = ${3};${4}
#snippet cos
#	static public final String ${1:var} = "${2}";${3}
#snippet as
#	assert ${1:test} : "${2:Failure message}";${3}
