# Prototype function
snippet proto
	${1:constructor_function}.prototype.${2:method_name} = function(${3:arguments}) {
		${4:// body...}
	};
	${5}
# Prototype object
snippet prototype
	${1:constructor_function}.prototype = {
		constructor: ${2:$1},
		${2:method_name}: function(${3:arguments}) {
			${4:// body...}
		}
	};
# Function
snippet fn
	function ${1:function_name}(${2:arguments}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {
		${2:// body...}
	}
	${3}
# if
snippet if
	if(${1:true}) {
		${2}
	}
	${3}
# if ... else
snippet ife
	if(${1:true}) {
		${2}
	} else {
		${3}
	}
	${4}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
#snippet switch
#	switch(${1:expression}) {
#		case '${3:case}':
#			${4:// code}
#			break;
#		${5}
#		default:
#			${2:// code}
#	}
## case
#snippet case
#	case '${1:case}':
#		${2:// code}
#		break;
#	${3}
# for (...) {...}
snippet for
	for(var ${1:i} = 0; $1 < ${2:n}; $1++) {
		${3:// body}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forarr
	for(var ${2:i} = ${1:arr}.length - 1; $2; $2--) {
		${3:$1[$2]}
	};
snippet forin
	for(${2:key} in ${1:dict}) {
		if($1.hasOwnProperty($2)) {
			${3:$1[$2]}
		}
	}
# while (...) {...}
snippet while
	while (${1:true}) {
		${2:// code}
	}
	${3}
# do...while
snippet do
	do {
		${2:// code}
	} while(${1:true});
	${3}
# Object Method
snippet f:
	${1:method_name}: function(${2:arguments}) {
		${3}
	}${4:,}
# Closures
snippet closure
	(function(${2:$1}, undefined) {
		${3:// body}
	})(${1:window, document});
# setTimeout function
snippet timeout
	setTimeout(function() {
		${2}
	}, ${1:10};
# setInterval function
snippet interval
	var ${1:interval} = setInterval(function() {
		${3}
	}, ${2:10});
	${4}
# Get Element by Id
snippet id
	document.getElementById('${1}')${2}
